#
# Helpers - stuff that's shared between make files
#

# This `Makefile` is intended to be included into other projects for the purpose of adding `Docker` capabilities
PACKAGE_NAME = $(shell basename `pwd`)
BUILD_HARNESS_MAKEFILE ?= $(BUILD_HARNESS_PATH)/Makefile
BUILD_NAMESPACES=docker\:% circle\:% kubernetes\:% datadog\:%
MAKEFILE_LIST += $(BUILD_HARNESS_MAKEFILE)

# Expose various namespaces from build-harness
$(BUILD_NAMESPACES):
	@make --no-print-directory -f "$(BUILD_HARNESS_MAKEFILE)" $@

MAKEFILE_PATH := $(strip $(MAKEFILE_LIST))
MAKEFILE_DIR := $(shell dirname "$(MAKEFILE_PATH)")

EDITOR ?= vim

SHELL = /bin/bash

green = $(shell echo -e '\x1b[32;01m$1\x1b[0m')
yellow = $(shell echo -e '\x1b[33;01m$1\x1b[0m')
red = $(shell echo -e '\x1b[33;31m$1\x1b[0m')


# Ensures that a variable is defined
define assert-set
  @[ -n "$$$1" ] || (echo "$(1) not defined in $(@)"; exit 1)
endef

# Ensures that a variable is undefined
define assert-unset
  @[ -z "$$$1" ] || (echo "$(1) should not be defined in $(@)"; exit 1)
endef

default: help

.PHONY : help
## This help screen
help:
	@printf "Available targets:\n\n"
	@awk '/^[a-zA-Z\-\_0-9%:\\]+:/ { \
	  helpMessage = match(lastLine, /^## (.*)/); \
	  if (helpMessage) { \
	    helpCommand = $$1; \
	    helpMessage = substr(lastLine, RSTART + 3, RLENGTH); \
      gsub("\\\\", "", helpCommand); \
      gsub(":+$$", "", helpCommand); \
	    printf "  \x1b[32;01m%-35s\x1b[0m %s\n", helpCommand, helpMessage; \
	  } \
	} \
	{ lastLine = $$0 }' $(MAKEFILE_LIST) | sort -u
	@printf "\n"
